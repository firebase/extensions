# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: image-resizer
specVersion: v1beta1
version: 0.1.0
license: Apache-2.0

displayName: Resize images in Cloud Storage

description:
  Resize new images uploaded to a Cloud Storage bucket to a specified size. Both the original and the resized images
  are stored in the same bucket. Additionally, you can configure this mod to generate the signed URLs for both images
  and to store the URLs in Realtime Database.

billingRequired: false
sourceUrl: https://dev-partners.googlesource.com/samples/firebase/mods/+/master/image-resizer
releaseNotesUrl: https://dev-partners.googlesource.com/samples/firebase/mods/+log

author:
  authorName: Firebase
  url: https://firebase.google.com
  
contributors:
  - authorName: Tina Liang
    url: https://github.com/tinaliang
  - authorName: Chris Bianca
    email: chris@csfrequency.com
    url: https://github.com/chrisbianca

apis:
  - apiName: storage-component.googleapis.com
    reason: Needed to use Cloud Storage

roles:
  - role: storage.admin
    reason: Allows the mod to store resized images in Cloud Storage
  - role: iam.serviceAccountTokenCreator
    reason: Allows the mod to generate signed URLs
  - role: firebasedatabase.admin
    reason: Allows the mod to store signed URLs in Realtime Database

resources:
  - name: generateResizedImage
    type: firebasemods.v1beta1.function
    description:
      Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images, then 
      stores both images in the same Cloud Storage bucket.
    properties:
      sourceDirectory: .
      location: ${LOCATION}
      eventTrigger:
        eventType: google.storage.object.finalize
        resource: projects/_/buckets/${IMG_BUCKET}

params:
  - param: LOCATION
    type: select
    label: Deployment location
    description: >-
      Where should the mod be deployed? You usually want a location close to your database.
      Realtime Database instances are located in us-central1.
      For help selecting a location, visit https://firebase.google.com/docs/functions/locations.
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
    default: us-central1
    required: true

  - param: IMG_BUCKET
    type: string
    label: Cloud Storage bucket for images
    description: >
      Which Cloud Storage bucket will contain the uploaded images that you want to resize?
      This bucket will also store the resized images.
    default: ${STORAGE_BUCKET}
    required: true

  - param: IMG_MAX_HEIGHT
    type: string
    label: Maximum height of resized image
    description: >
      What do you want the maximum height of resized images to be (in pixels)?
      Learn more about how this parameter works within this mod: https://firebase.google.com/products/mods/image-resizer
    # all default values must be strings, so number must be wrapped in quotes
    default: "200"
    validationRegex: ^\d+$
    validationErrorMessage: Invalid height, must be a positive integer.
    required: true

  - param: IMG_MAX_WIDTH
    type: string
    label: Maximum width of resized image
    description: >
      What do you want the maximum width of resized images to be (in pixels)?
      Learn more about how this parameter works within this mod: https://firebase.google.com/products/mods/image-resizer
    # all default values must be strings, so number must be wrapped in quotes
    default: "200"
    validationRegex: ^\d+$
    validationErrorMessage: Invalid width, must be a positive integer.
    required: true

  - param: SIGNED_URLS_PATH
    label: (Optional) Realtime Database path for signed URLs for images
    description: >
      What is the Realtime Database path where you want to store signed URLs for the original and resized images?
      Learn more about how this parameter works within this mod: https://firebase.google.com/products/mods/image-resizer
      If you prefer to not use signed URLs, leave this field empty.
    required: false

  - param: SIGNED_URLS_EXPIRATION_DATE
    type: string
    label: (Optional) Date after which signed URLs will expire (MM-DD-YYYY)
    description: >
      After what date do you want the signed URLs to expire? Enter the date in MM-DD-YYYY format.
      If you prefer to not use signed URLs, leave this field as the default.
    default: "03-01-2500"
    required: false

  - param: CACHE_CONTROL_HEADER
    label: (Optional) `cache-control` header for resized images
    description: >
      Do you want to specify a `cache-control` header for the resized image files?
      Learn more about `cache-control` headers: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control
      If you prefer not to use a `cache-control` header, leave this field empty.
    required: false
