# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: image-resizer
specVersion: v1beta1
version: 0.1.0
license: Apache-2.0

displayName: Resize images in Cloud Storage

description:
  Resize new images uploaded to a Cloud Storage bucket to a specified size. Both
  the original and the resized images are stored in the same bucket.
billingRequired: false
sourceUrl: https://accounts.google.com/AccountChooser/signinchooser?service=gerritcodereview&continue=https%3A%2F%2Fdev-partners.googlesource.com%2Flogin%2Fsamples%2Ffirebase%2Fmods%2F%2B%2Fmaster%2Fimage-resizer
releaseNotesUrl: https://dev-partners.googlesource.com/samples/firebase/mods/+log

author:
  authorName: Firebase
  url: https://firebase.google.com

contributors:
  - authorName: Tina Liang
    url: https://github.com/tinaliang
  - authorName: Chris Bianca
    email: chris@csfrequency.com
    url: https://github.com/chrisbianca

apis:
  - apiName: storage-component.googleapis.com
    reason: Needed to use Cloud Storage

roles:
  - role: storage.admin
    reason: Allows the extension to store resized images in Cloud Storage

resources:
  - name: generateResizedImage
    type: firebasemods.v1beta1.function
    description:
      Listens for new images uploaded to your specified Cloud Storage bucket,
      resizes the images, then stores both images in the same Cloud Storage
      bucket.
    properties:
      sourceDirectory: .
      location: ${LOCATION}
      eventTrigger:
        eventType: google.storage.object.finalize
        resource: projects/_/buckets/${IMG_BUCKET}

params:
  - param: LOCATION
    type: select
    label: Deployment location
    description: >-
      Where should the extension be deployed? For help selecting a location,
      refer to the [location selection
      guide](https://firebase.google.com/docs/functions/locations).
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
    default: us-central1
    required: true

  - param: IMG_BUCKET
    type: string
    label: Cloud Storage bucket for images
    description: >
      Which Cloud Storage bucket will contain the uploaded images that you want
      to resize? This bucket will also store the resized images.
    default: ${STORAGE_BUCKET}
    validationRegex: (.)+\.(.)+\.(.)+
    validationErrorMessage: Invalid storage bucket
    example: my-project-12345.appspot.com
    required: true

  - param: IMG_SIZES
    type: string
    label: Sizes of resized images
    description: >
      What sizes of images would you like (in pixels)? Enter the sizes as a
      comma-separated list of WIDTHxHEIGHT values
    default: "200x200"
    example: "200x200"
    validationRegex: ^\d+x(\d+,\d+x)*\d+$
    validationErrorMessage:
      Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values.
    required: true

  - param: RESIZED_IMAGES_PATH
    label: (Optional) Cloud Storage path for resized images
    description: >
      A relative path in which to store resized images. For example, a file
      uploaded to `/images/original.jpg` with a path of `thumbs` would have its
      resized images stored at `/images/thumbs/*`, e.g.
      `/images/thumbs/original_200x200.jpg`. If you prefer to store resized
      images at the root of the bucket, leave this field empty. Learn more about
      [how this parameter
      works](https://firebase.google.com/products/extensions/image-resizer).
    example: thumbnails
    required: false

  - param: CACHE_CONTROL_HEADER
    label: (Optional) `cache-control` header for resized images
    description: >
      Do you want to specify a `cache-control` header for the resized image
      files? Learn more about `cache-control` headers:
      https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control If
      you prefer not to use a `cache-control` header, leave this field empty.
    example: max-age=86400
    required: false
