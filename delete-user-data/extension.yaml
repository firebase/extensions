# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: delete-user-data
version: 0.1.25
specVersion: v1beta

displayName: Delete User Data
description:
  Deletes data keyed on a userId from Cloud Firestore, Realtime Database, or
  Cloud Storage when a user deletes their account.

license: Apache-2.0

sourceUrl: https://github.com/firebase/extensions/tree/master/delete-user-data
releaseNotesUrl: https://github.com/firebase/extensions/blob/master/delete-user-data/CHANGELOG.md

author:
  authorName: Firebase
  url: https://firebase.google.com

contributors:
  - authorName: Lauren Long
    url: https://github.com/laurenzlong
  - authorName: Chris Bianca
    email: chris@csfrequency.com
    url: https://github.com/chrisbianca
  - authorName: Invertase
    email: oss@invertase.io
    url: https://github.com/invertase

billingRequired: true

roles:
  - role: datastore.owner
    reason: Allows the extension to delete (user) data from Cloud Firestore.
  - role: firebasedatabase.admin
    reason: Allows the extension to delete (user) data from Realtime Database.
  - role: storage.admin
    reason: Allows the extension to delete (user) data from Cloud Storage.
  - role: pubsub.admin
    reason:
      Allows the extension to publish and subscribe to PubSub events. The
      extension uses PubSub to parallelize deletion and data discovery, no
      PubSub data is deleted.

resources:
  - name: clearData
    type: firebaseextensions.v1beta.v2function
    description:
      Listens for user accounts to be deleted from your project's authenticated
      users, then removes any associated user data (based on Firebase
      Authentication's User ID) from Realtime Database, Cloud Firestore, and/or
      Cloud Storage.
    properties:
      sourceDirectory: functions
      buildConfig:
        runtime: nodejs22
      eventTrigger:
        eventType: providers/firebase.auth/eventTypes/user.delete
        triggerRegion: ${param:LOCATION}

  - name: handleSearch
    type: firebaseextensions.v1beta.v2function
    properties:
      sourceDirectory: functions
      buildConfig:
        runtime: nodejs22
      eventTrigger:
        eventType: google.pubsub.topic.publish
        triggerRegion: ${param:LOCATION}

  - name: handleDeletion
    type: firebaseextensions.v1beta.v2function
    properties:
      sourceDirectory: functions
      buildConfig:
        runtime: nodejs22
      eventTrigger:
        eventType: google.pubsub.topic.publish
        triggerRegion: ${param:LOCATION}

params:
  - param: LOCATION
    label: Location
    description: The location of the Cloud Firestore database.
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Oregon (us-west1)
        value: us-west1
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: Finland (europe-north1)
        value: europe-north1
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: London (europe-west2)
        value: europe-west2
      - label: Netherlands (europe-west4)
        value: europe-west4
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Taiwan (asia-east1)
        value: asia-east1
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Singapore (asia-southeast1)
        value: asia-southeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: United States (multi-regional)
        value: us
      - label: Europe (multi-regional)
        value: eu
      - label: Johannesburg (africa-south1)
        value: africa-south1
      - label: Tel Aviv (me-west1)
        value: me-west1
      - label: Doha (me-central1)
        value: me-central1
      - label: Dammam (me-central2)
        value: me-central2
      - label: ZÃ¼rich (europe-west6)
        value: europe-west6
      - label: Turin (europe-west12)
        value: europe-west12
      - label: Stockholm (europe-north2)
        value: europe-north2
      - label: Paris (europe-west9)
        value: europe-west9
      - label: Milan (europe-west8)
        value: europe-west8
      - label: Madrid (europe-southwest1)
        value: europe-southwest1
      - label: Berlin (europe-west10)
        value: europe-west10
      - label: Melbourne (australia-southeast2)
        value: australia-southeast2
      - label: Delhi (asia-south2)
        value: asia-south2
      - label: Toronto (northamerica-northeast2)
        value: northamerica-northeast2
      - label: Santiago (southamerica-west1)
        value: southamerica-west1
      - label: Mexico (northamerica-south1)
        value: northamerica-south1
      - label: Dallas (us-south1)
        value: us-south1
      - label: Columbus, Ohio (us-east5)
        value: us-east5
    default: us
    required: true
    immutable: true

  - param: DATABASE
    label: Database
    description:
      The Firestore database to use. "(default)" is used for the default
      database.
    type: string
    default: (default)
    required: true

  - param: FIRESTORE_PATHS
    label: Cloud Firestore paths
    description: >-
      Which paths in your Cloud Firestore instance contain data keyed on a user
      ID? Leave empty if you don't use Cloud Firestore.

      Enter the full paths, separated by commas. Use `{UID}` as a placeholder
      for the user's UID.

      For example, if you have the collections `users` and `admins`, and each
      collection has documents with User ID as document IDs, then enter
      `users/{UID},admins/{UID}`.
    type: string
    example: users/{UID},admins/{UID}
    required: false

  - param: FIRESTORE_DELETE_MODE
    label: Cloud Firestore delete mode
    description: >-
      (Only applicable if you use the `Cloud Firestore paths` parameter.) How do
      you want to delete Cloud Firestore documents? To also delete documents in
      subcollections, set this parameter to `recursive`.
    type: select
    options:
      - label: Recursive
        value: recursive
      - label: Shallow
        value: shallow
    default: shallow
    required: true

  - param: SELECTED_DATABASE_INSTANCE
    label: Realtime Database instance
    description: >
      What is the ID of the Realtime Database instance from which you want to
      delete user data (keyed on user ID)?
    type: string
    example: my-instance
    validationRegex: ^[^\.\$\#\]\[\/\x00-\x1F\x7F]+$
    validationErrorMessage:
      Invalid database instance. Make sure that you have entered just the
      instance ID, and not the entire database URL.
    required: false

  - param: SELECTED_DATABASE_LOCATION
    label: Realtime Database location
    description: >
      (Only applicable if you provided the `Realtime Database instance`
      parameter.) From which Realtime Database location do you want to delete
      data keyed on a user ID?
    type: select
    options:
      - label: United States
        value: us-central1
      - label: Belgium
        value: europe-west1
      - label: Singapore
        value: asia-southeast1
    default: us-central1
    required: false

  - param: RTDB_PATHS
    label: Realtime Database paths
    description: >-
      Which paths in your Realtime Database instance contain data keyed on a
      user ID? Leave empty if you don't use Realtime Database.

      Enter the full paths, separated by commas. Use `{UID}` as a placeholder
      for the user's UID.

      For example: `users/{UID},admins/{UID}`.

    type: string
    example: users/{UID},admins/{UID}
    required: false

  - param: CLOUD_STORAGE_BUCKET
    label: Cloud Storage bucket
    description: >
      Which Google Cloud Storage bucket do you want to delete files from?
    type: string
    example: my-project-12345.appspot.com
    validationRegex: ^([0-9a-z_.-]*)$
    validationErrorMessage: Invalid storage bucket
    default: ${STORAGE_BUCKET}
    required: true

  - param: STORAGE_PATHS
    label: Cloud Storage paths
    description: >-
      Where in Google Cloud Storage do you store data keyed on a user ID? Leave
      empty if you don't use Cloud Storage.

      Enter the full paths to files or directories in your Storage buckets,
      separated by commas. Use `{UID}` to represent the User ID of the deleted
      user, and use `{DEFAULT}` to represent your default Storage bucket.

      Here's a series of examples. To delete all the files in your default
      bucket with the file naming scheme `{UID}-pic.png`, enter
      `{DEFAULT}/{UID}-pic.png`. To also delete all the files in another bucket
      called my-app-logs with the file naming scheme `{UID}-logs.txt`, enter
      `{DEFAULT}/{UID}-pic.png,my-app-logs/{UID}-logs.txt`. To *also* delete a
      User ID-labeled directory and all its files (like `media/{UID}`), enter
      `{DEFAULT}/{UID}-pic.png,my-app-logs/{UID}-logs.txt,{DEFAULT}/media/{UID}`.
    type: string
    example: "{DEFAULT}/{UID}-pic.png,my-awesome-app-logs/{UID}-logs.txt"
    required: false

  - param: ENABLE_AUTO_DISCOVERY
    label: Enable auto discovery
    description: >-
      Enable the extension to automatically discover Firestore collections and
      documents to delete.
    type: select
    options:
      - label: Yes
        value: yes
      - label: No
        value: no
    default: no
    required: true

  - param: AUTO_DISCOVERY_SEARCH_DEPTH
    label: Auto discovery search depth
    description: >-
      If auto discovery is enabled, how deep should auto discovery find
      collections and documents. For example, setting to `1` would only discover
      root collections and documents, whereas setting to `9` would search
      sub-collections 9 levels deep. Defaults to `3`.
    validation: ^[0-9]
    type: string
    default: 3
    required: true

  - param: AUTO_DISCOVERY_SEARCH_FIELDS
    label: Auto discovery search fields
    description: >-
      If auto discovery is enabled, specify what document fields are used to
      associate the UID with the document. The extension will delete documents
      where the value for one or more of these fields matches the deleting
      userâs UID. If left empty, document fields will not be used in auto
      discovery.
    type: string
    default: "id,uid,userId"
    required: false

  - param: SEARCH_FUNCTION
    label: Search function URL
    description: >-
      Specify a URL to call that will return a list of document paths to delete.
      The extension will send a `POST` request to the specified `URL`, with the
      `uid` of the deleted user will be provided in the body of the request. The
      endpoint specified should return an array of firestore paths to delete.
    example: https://us-west1-my-project-id.cloudfunctions.net/myTransformFunction
    type: string
    required: false

events:
  - type: firebase.extensions.delete-user-data.v1.firestore
    description:
      Occurs when a set of Firestore paths has been marked for deletion
      following a delete user trigger.

  - type: firebase.extensions.delete-user-data.v1.database
    description:
      Occurs when a set of Realtime Database paths has been marked for deletion
      following a delete user trigger.

  - type: firebase.extensions.delete-user-data.v1.storage
    description:
      Occurs when a set of Storage paths has been marked for deletion following
      a delete user trigger.
