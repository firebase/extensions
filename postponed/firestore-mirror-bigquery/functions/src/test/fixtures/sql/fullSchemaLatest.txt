-- Given a user-defined schema over a raw JSON changelog, returns the
-- schema elements of the latest set of live documents in the collection.
--   timestamp: The Firestore timestamp at which the event took place.
--   operation: One of INSERT, UPDATE, DELETE, IMPORT.
--   eventId: The event that wrote this row.
--   <schema-fields>: This can be one, many, or no typed-columns
--                    corresponding to fields defined in the schema.
SELECT
  *
EXCEPT
  (favorite_numbers, last_location)
FROM
  (
    SELECT
      document_name,
      timestamp,
      operation,
      name,
      favorite_numbers,
      last_login,
      last_location,
      last_location_latitude,
      last_location_longitude
    FROM
      (
        SELECT
          document_name,
          FIRST_VALUE(timestamp) OVER(
            PARTITION BY document_name
            ORDER BY
              timestamp DESC
          ) AS timestamp,
          FIRST_VALUE(operation) OVER(
            PARTITION BY document_name
            ORDER BY
              timestamp DESC
          ) AS operation,
          FIRST_VALUE(operation) OVER(
            PARTITION BY document_name
            ORDER BY
              timestamp DESC
          ) = "DELETE" AS is_deleted,
          FIRST_VALUE(JSON_EXTRACT_SCALAR(data, '$.friends.name')) OVER(
            PARTITION BY document_name
            ORDER BY
              timestamp DESC
          ) AS name,
          `test.test_dataset.json2array`(
            FIRST_VALUE(JSON_EXTRACT(data, '$.favorite_numbers')) OVER(
              PARTITION BY document_name
              ORDER BY
                timestamp DESC
            )
          ) AS favorite_numbers,
          TIMESTAMP_SECONDS(
            CAST(
              FIRST_VALUE(JSON_EXTRACT(data, '$.last_login._seconds')) OVER(
                PARTITION BY document_name
                ORDER BY
                  timestamp DESC
              ) AS INT64
            ) + CAST(
              CAST(
                FIRST_VALUE(JSON_EXTRACT(data, '$.last_login._nanoseconds')) OVER(
                  PARTITION BY document_name
                  ORDER BY
                    timestamp DESC
                ) AS INT64
              ) / 1E9 AS INT64
            )
          ) AS last_login,
          ST_GEOGPOINT(
            CAST(
              FIRST_VALUE(JSON_EXTRACT(data, '$.last_location._latitude')) OVER(
                PARTITION BY document_name
                ORDER BY
                  timestamp DESC
              ) AS NUMERIC
            ),
            CAST(
              FIRST_VALUE(JSON_EXTRACT(data, '$.last_location._longitude')) OVER(
                PARTITION BY document_name
                ORDER BY
                  timestamp DESC
              ) AS NUMERIC
            )
          ) AS last_location,
          CAST(
            FIRST_VALUE(JSON_EXTRACT(data, '$.last_location._latitude')) OVER(
              PARTITION BY document_name
              ORDER BY
                timestamp DESC
            ) AS NUMERIC
          ) AS last_location_latitude,
          CAST(
            FIRST_VALUE(JSON_EXTRACT(data, '$.last_location._longitude')) OVER(
              PARTITION BY document_name
              ORDER BY
                timestamp DESC
            ) AS NUMERIC
          ) AS last_location_longitude
        FROM
          `test.test_dataset.test_table`
      )
    WHERE
      NOT is_deleted
  ) test_table
  CROSS JOIN UNNEST(test_table.favorite_numbers) AS favorite_numbers_member WITH OFFSET favorite_numbers_index
GROUP BY
  document_name,
  timestamp,
  operation,
  name,
  last_login,
  last_location_latitude,
  last_location_longitude,
  favorite_numbers_index,
  favorite_numbers_member,
  last_location_latitude,
  last_location_longitude
