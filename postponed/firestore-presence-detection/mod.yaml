# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: user-presence-detection
specVersion: v1beta1
version: 0.0.1
licesnse: Apache-2.0

displayName: User Presence with Firestore

description:
  Detect the presence of authenticated users with Firestore. The extension uses RTDB to set up
  onDisconnect triggers to accurately track user connections. Presence information is mirrored to
  Firestore using Cloud Functions for Firebase. You can configure which document
  path in RTDB and the collection in Firestore to store information.

billingRequired: false

author:
  authorName: Firebase
  url: https://firebase.google.com

contributors:
  - authorName: Michael Nguyen
    url: https://github.com/nguymichael
  - authorName: Yuchen Shi

roles:
  - role: datastore.user
    reason: Allows the extension to store presence information in Firestore
  - role: firebasedatabase.admin
    reason: Allows the extension to store presence information in RTDB and register OnDisconnect

resources:
  - name: writeToFirestore
    type: firebasemods.v1beta1.function
    properties:
      sourceDirectory: .
      location: ${LOCATION}
      timeout: 540s
      eventTrigger:
        eventType: providers/google.firebase.database/eventTypes/ref.write
        resource: projects/_/instances/${DATABASE_INSTANCE}/refs/${RTDB_PATH}/{user_id}/sessions/{session_id}
        failurePolicy:
          retry: {}
  - name: cleanUpDeadSessions
    type: firebasemods.v1beta1.function
    properties:
      sourceDirectory: .
      location: ${LOCATION}
      timeout: 540s
      eventTrigger:
        eventType: google.pubsub.topic.publish
        resource: projects/${PROJECT_ID}/topics/${PUBSUB_TOPIC}

params:
  - param: LOCATION
    type: select
    label: Deployment location
    description: >
      Where should the extension be deployed? You usually want a location close to your database.
      Realtime Database instances are located in us-central1.
      For help selecting a location, refer to the
      [location selection guide](https://firebase.google.com/docs/functions/locations).
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
    default: us-central1
    required: true

  - param: RTDB_PATH
    label: Realtime database path
    description: >
      What is the path you want to store the user presence information on RTDB?
    default: _firebase_extensions/presence
    example: _firebase_extensions/presence
    required: true

  - param: FIRESTORE_PATH
    label: Firestore collection
    description: >
      What is the collection you want to store the user presence information in Firestore?
    example: _user_presence
    default: _user_presence
    required: true

  - param: PUBSUB_TOPIC
    label: Pubsub topic for cleanup
    description: >
      What Pubsub topic to trigger the cleanup function?
    default: cleanUpDeadSessions
    example: cleanUpDeadSessions
    required: true
