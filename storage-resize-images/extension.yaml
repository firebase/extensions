# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: storage-resize-images
specVersion: v1beta
version: 0.1.0
license: Apache-2.0

displayName: Resize Images

description:
  Resizes images uploaded to Cloud Storage to a specified size, and stores both the original and resized images.

billingRequired: false
sourceUrl: https://github.com/firebase/extensions/tree/master/storage-resize-images
releaseNotesUrl: https://github.com/firebase/extensions/commits/master

author:
  authorName: Firebase
  url: https://firebase.google.com

contributors:
  - authorName: Tina Liang
    url: https://github.com/tinaliang
  - authorName: Chris Bianca
    email: chris@csfrequency.com
    url: https://github.com/chrisbianca
  - authorName: Mike Diarmid
    email: mike@invertase.io
    url: https://github.com/salakar

apis:
  - apiName: storage-component.googleapis.com
    reason: Needed to use Cloud Storage

roles:
  - role: storage.admin
    reason: Allows the extension to store resized images in Cloud Storage

resources:
  - name: generateResizedImage
    type: firebaseextensions.v1beta.function
    description:
      Listens for new images uploaded to your specified Cloud Storage bucket,
      resizes the images, then stores both images in the same Cloud Storage
      bucket.
    properties:
      sourceDirectory: .
      location: ${LOCATION}
      availableMemoryMb: 1024
      eventTrigger:
        eventType: google.storage.object.finalize
        resource: projects/_/buckets/${IMG_BUCKET}

params:
  - param: LOCATION
    type: select
    label: Deployment location
    description: >-
      Where should the extension be deployed? You usually want a location close to your Storage bucket.
      For help selecting a location, refer to the
      [location selection guide](https://firebase.google.com/docs/functions/locations).
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
    default: us-central1
    required: true

  - param: IMG_BUCKET
    type: string
    label: Cloud Storage bucket for images
    description: >
      To which Cloud Storage bucket will you upload images that you want to resize?
      This bucket will store both the original and resized images.
    default: ${STORAGE_BUCKET}
    validationRegex: (.)+\.(.)+\.(.)+
    validationErrorMessage: Invalid storage bucket
    example: my-project-12345.appspot.com
    required: true

  - param: IMG_SIZES
    type: string
    label: Sizes of resized images
    description: >
      What sizes of images would you like (in pixels)? Enter the sizes as a
      comma-separated list of WIDTHxHEIGHT values.
    default: "200x200"
    example: "200x200"
    validationRegex: ^\d+x(\d+,\d+x)*\d+$
    validationErrorMessage:
      Invalid sizes, must be a comma-separated list of WIDTHxHEIGHT values.
    required: true

  - param: RESIZED_IMAGES_PATH
    label: Cloud Storage path for resized images
    description: >
      A relative path in which to store resized images. For example,
      if you specify a path here of `thumbs` and you upload an image to
      `/images/original.jpg`, then the resized image is stored at
      `/images/thumbs/original_200x200.jpg`. If you prefer to store resized
      images at the root of your bucket, leave this field empty. Learn more about
      [how this parameter works](https://firebase.google.com/products/extensions/storage-resize-images).
    example: thumbnails
    required: false

  - param: CACHE_CONTROL_HEADER
    label: Cache-Control header for resized images
    description: >
      Do you want to specify a `Cache-Control` header for the resized image
      files? Learn more about
      [`Cache-Control` headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control).
      If you prefer not to use a `Cache-Control` header, leave this field empty.
    example: max-age=86400
    required: false
