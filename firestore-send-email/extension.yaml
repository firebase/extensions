# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: firestore-send-email
version: 0.1.30
specVersion: v1beta

displayName: Trigger Email from Firestore
description:
  Composes and sends an email based on the contents of a document written to a
  specified Cloud Firestore collection.

license: Apache-2.0

sourceUrl: https://github.com/firebase/extensions/tree/master/firestore-send-email
releaseNotesUrl: https://github.com/firebase/extensions/blob/master/firestore-send-email/CHANGELOG.md

author:
  authorName: Firebase
  url: https://firebase.google.com

contributors:
  - authorName: Michael Bleigh
    url: https://github.com/mbleigh
  - authorName: Invertase
    email: oss@invertase.io
    url: https://github.com/invertase

billingRequired: true

roles:
  - role: datastore.user
    reason:
      Allows this extension to access Cloud Firestore to read and process added
      email documents.

resources:
  - name: processQueue
    type: firebaseextensions.v1beta.function
    description:
      Processes document changes in the specified Cloud Firestore collection,
      delivers emails, and updates the document with delivery status
      information.
    properties:
      runtime: nodejs18
      eventTrigger:
        eventType: providers/cloud.firestore/eventTypes/document.write
        resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:MAIL_COLLECTION}/{id}

params:
  - param: SMTP_CONNECTION_URI
    label: SMTP connection URI
    description: >-
      A URI representing an SMTP server this extension can use to deliver email.
      Note that port 25 is blocked by Google Cloud Platform, so we recommend
      using port 587 for SMTP connections. If you're using the SMTPS protocol,
      we recommend using port 465. In order to keep passwords secure, it is
      recommended to omit the password from the connection string while using
      the `SMTP Password` field for entering secrets and passwords. Passwords
      and secrets should now be included in `SMTP password` field.

      Secure format:
       `smtps://username@gmail.com@smtp.gmail.com:465` (username only)
       `smtps://smtp.gmail.com:465` (No username and password)
      Backwards Compatible (less secure):
       `smtps://username@gmail.com:password@smtp.gmail.com:465`. (username and
      password)
    type: string
    example: smtps://username@smtp.hostname.com:465
    validationRegex: ^(smtp[s]*://(.*?(:[^:@]*)?@)?[^:@]+:[0-9]+(\\?[^ ]*)?)$
    validationErrorMessage:
      Invalid SMTP connection URI. Must be in the form
      `smtp(s)://username:password@hostname:port` or
      `smtp(s)://username@hostname:port`.
    required: true

  - param: SMTP_PASSWORD
    label: SMTP password
    description: >-
      User password for the SMTP server
    type: secret
    required: false

  - param: MAIL_COLLECTION
    label: Email documents collection
    description: >-
      What is the path to the collection that contains the documents used to
      build and send the emails?
    type: string
    default: mail
    validationRegex: "^[^/]+(/[^/]+/[^/]+)*$"
    validationErrorMessage: Must be a valid Cloud Firestore collection
    required: true

  - param: DEFAULT_FROM
    label: Default FROM address
    description: >-
      The email address to use as the sender's address (if it's not specified in
      the added email document). You can optionally include a name with the
      email address (`Friendly Firebaser <foobar@example.com>`). This parameter
      does not work with [Gmail
      SMTP](https://nodemailer.com/usage/using-gmail/).
    type: string
    example: foobar@example.com
    validationRegex: ^(([^<>()\[\]\.,;:\s@\"]+(\.[^<>()\[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$|^.*<(([^<>()\[\]\.,;:\s@\"]+(\.[^<>()\[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})>$
    validationErrorMessage:
      Must be a valid email address or valid name plus email address
    required: true

  - param: DEFAULT_REPLY_TO
    label: Default REPLY-TO address
    description: >-
      The email address to use as the reply-to address (if it's not specified in
      the added email document).
    type: string

  - param: USERS_COLLECTION
    label: Users collection
    description: >-
      A collection of documents keyed by user UID. If the `toUids`, `ccUids`,
      and/or `bccUids` recipient options are used in the added email document,
      this extension delivers email to the `email` field based on lookups in
      this collection.
    type: string

  - param: TEMPLATES_COLLECTION
    label: Templates collection
    description: >-
      A collection of email templates keyed by name. This extension can render
      an email using a [Handlebar](https://handlebarsjs.com/) template, it's
      recommended to use triple curly braces `{{{  }}}` in your Handlebars
      templates when the substitution value is a URL or otherwise sensitive to
      HTML escaping.
    type: string

  - param: TTL_EXPIRE_TYPE
    label: Firestore TTL type
    description: >-
      Do you want the firestore records to be marked with an expireAt field for
      a TTL policy? If "Never" is selected then no expireAt field will be added.
      Otherwise you may specify the unit of time specified by the
      TTL_EXPIRE_VALUE parameter. Defaults to "Never".
    type: select
    options:
      - label: Never
        value: never
      - label: Hour
        value: hour
      - label: Day
        value: day
      - label: Week
        value: week
      - label: Month
        value: month
      - label: Year
        value: year
    default: never
    required: true

  - param: TTL_EXPIRE_VALUE
    label: Firestore TTL value
    description: >-
      In the units specified by TTL_EXPIRE_TYPE, how long do you want records to
      be ineligible for deletion by a TTL policy? This parameter requires the
      Firestore TTL type parameter to be set to a value other than `Never`. For
      example, if `Firestore TTL type` is set to `Day` then setting this
      parameter to `1` will specify a TTL of 1 day.
    validationRegex: "^[1-9][0-9]*$"
    validationErrorMessage:
      The value must be an integer value greater than zero.
    default: "1"
    required: true

  - param: TLS_OPTIONS
    label: TLS Options
    description: >-
      A JSON value representing TLS options. For more information, see
      https://nodejs.org/api/tls.html#tls_class_tls_tlssocket
    required: false

events:
  - type: firebase.extensions.firestore-send-email.v1.onStart
    description: Occurs when the extension starts execution.

  - type: firebase.extensions.firestore-send-email.v1.onProcessing
    description: Occurs when the extension attempts to process an email.

  - type: firebase.extensions.firestore-send-email.v1.onRetry
    description: Occurs when the extension attempts to resend an email.

  - type: firebase.extensions.firestore-send-email.v1.onPending
    description: Occurs when an email has a pending status.

  - type: firebase.extensions.firestore-send-email.v1.onSuccess
    description: Occurs when the extension successfully sends an email.

  - type: firebase.extensions.firestore-send-email.v1.onComplete
    description: Occurs when the extension completes execution.

  - type: firebase.extensions.firestore-send-email.v1.onError
    description: Occurs when the extension fails to complete execution.
