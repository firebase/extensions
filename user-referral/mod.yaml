# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: user-referral
displayName: Enable users to refer friends
specVersion: v1beta1
version: 0.1.0

description:
  Allow your users to send a pre-populated email (via SendGrid) to invite their friends to use your app.
  Track invites and conversions using Cloud Firestore.

license: Apache-2.0
billingRequired: true
sourceUrl: https://accounts.google.com/AccountChooser/signinchooser?service=gerritcodereview&continue=https%3A%2F%2Fdev-partners.googlesource.com%2Flogin%2Fsamples%2Ffirebase%2Fmods%2F%2B%2Fmaster%2Fuser-referral
releaseNotesUrl: https://dev-partners.googlesource.com/samples/firebase/mods/+log

author:
  authorName: Firebase
  url: https://firebase.google.com

contributors:
  - authorName: Tina Liang
    url: https://github.com/tinaliang
  - authorName: Chris Bianca
    email: chris@csfrequency.com
    url: https://github.com/chrisbianca

roles:
  - role: datastore.user
    reason:
      Allows the mod to store metadata about invitations in Cloud Firestore.

resources:
  - name: sendInvitation
    type: firebasemods.v1beta1.function
    description:
      Creates an invitation in Cloud Firestore, then sends an email with the pre-populated message using the SendGrid
      API.
    properties:
      sourceDirectory: .
      location: ${LOCATION}
      httpsTrigger: {}

  - name: acceptInvitation
    type: firebasemods.v1beta1.function
    description:
      Marks an invitation as accepted, then updates Cloud Firestore accordingly.
    properties:
      sourceDirectory: .
      location: ${LOCATION}
      httpsTrigger: {}

params:
  - param: LOCATION
    type: select
    label: Deployment location
    description: >-
      Where should the mod be deployed? You usually want a location close to your database.
      For help selecting a location, refer to the
      [location selection guide](https://firebase.google.com/docs/functions/locations).
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
    default: us-central1
    required: true

  - param: SENDGRID_API_KEY
    type: string
    label: SendGrid API key
    description: >
      What is your API key for SendGrid?
      Create a SendGrid API key: In your SendGrid account, go to "API Keys" under "Settings", then
      click "Create  API Key". Alternatively, in your SendGrid account, go to "Setup Guide",
      then follow the instructions to "Integrate using our Web API or SMTP relay".
    example: a1b2c3d4e5f6g7
    required: true

  - param: SENDGRID_EMAIL_ALIAS
    type: string
    label: SendGrid email alias
    description: >
      What is the email address that you want to use as the alias for sending email invitations?
      This alias can be your domain's email address, or you can create a new email address for the purpose of
      sending invitations. We do not support sending invitations using the inviter's personal email address.
    example: email@domain.com
    required: true
    validationRegex: '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
    validationErrorMessage: >
      Please provide a valid email address.

  - param: APP_NAME
    type: string
    label: App name
    description: What is the name of your app? This will be used in the invitation email.
    example: My Amazing App
    required: true

  - param: ACCEPT_URL_TEMPLATE
    type: string
    label: Accept invitation URL
    description: >
      What is the URL to include in invitation emails?
      An example URL is "https://${PROJECT_ID}.firebaseapp.com/?acceptInvitation={token}"
      The mod replaces "{token}" in the URL with the actual invitation token;
      the mod generates this token when triggered.
      Note that the default URL for this mod assumes your app uses Firebase Hosting, so the URL uses
      `acceptInvitation` as a query parameter at the root URL.
    default: "https://${PROJECT_ID}.firebaseapp.com/?acceptInvitation={token}"
    example: https://${PROJECT_ID}.firebaseapp.com/?acceptInvitation={token}
    validationRegex: '.*\{token\}.*'
    validationErrorMessage: >
      Your URL must include '{token}' so that it can be replaced with an actual
      invitation token generated by the mod.
    required: true

  - param: TARGET_RECEIVER_FIELDS
    type: string
    label: Document and field path for invited-user's UID
    description: >
      What is the path to the Cloud Firestore document and field where you want
      to store the UID of users who *receive* invitations?
      For example, if the invitation receiver's UID is 123 and the sender's UID is 789,
      a specified path and field of `users/{sender}.friends` will append "123"
      to the "friends" array field for document "789" in the "users" collection.
      Document/field pairs are separated with commas.
    default: users/{sender}.friends
    example: users/{sender}.friends
    required: false
    validationRegex: '.+/.+\..+'
    validationErrorMessage: >
      Values must be comma-separated document paths with fields (for example, `coll/doc.field,coll/doc.field`).

  - param: TARGET_SENDER_FIELDS
    type: string
    label: Document and field path for sending-user's UID
    description: >
      What is the path to the Cloud Firestore document and field where you want
      to store the UID of users who *send* invitations?
      For example, if the invitation receiver's UID is 123 and the sender's UID is 789,
      a specified path and field of `users/{receiver}.friends` will append "789"
      to the "friends" array field for document "123" in the "users" collection.
      Document/field pairs are separated with commas.
    default: users/{receiver}.friends
    example: users/{receiver}.friends
    required: false
    validationRegex: '.+/.+\..+'
    validationErrorMessage: >
      Values must be comma-separated document paths with fields (for example, `coll/doc.field,coll/doc.field`).

  - param: METADATA_FIRESTORE_COLLECTION
    type: string
    label: Cloud Firestore collection for metadata
    description: >
      What is the path for the Cloud Firestore collection where you want to store
      metadata for invitations?
    default: _invitations
    example: _invitations
    required: true
    validationRegex: '[\w_.-]+'
    validationErrorMessage: >
      Path must be a simple alphanumeric field name, optionally with periods,
      underscores, or dashes.
